{"numFailedTestSuites":0,"numFailedTests":0,"numPassedTestSuites":6,"numPassedTests":16,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":6,"numTotalTests":16,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1739970986702,"success":true,"testResults":[{"assertionResults":[{"ancestorTitles":["ImageService","Save new image"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"ImageService Save new image should save image and return correct URL","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should save image and return correct URL"},{"ancestorTitles":["ImageService","getImage"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ImageService getImage should return the image if it is valid","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return the image if it is valid"},{"ancestorTitles":["ImageService","getImage"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ImageService getImage should return null if the image is not valid","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return null if the image is not valid"}],"endTime":1739970990173,"message":"","name":"/usr/src/app/tests/unitTests/domain/services/imageService.test.ts","startTime":1739970986745,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ImageController","saveImage"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ImageController saveImage should save image successfully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should save image successfully"},{"ancestorTitles":["ImageController","getImage"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"ImageController getImage should serve the image if valid","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should serve the image if valid"},{"ancestorTitles":["ImageController","getImage"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"ImageController getImage should handle invalid file and call next with error","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle invalid file and call next with error"}],"endTime":1739970990554,"message":"","name":"/usr/src/app/tests/unitTests/application/controllers/imageController.test.ts","startTime":1739970990178,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["CacheHelper"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"CacheHelper should call redisInstance.setKeyValue with correct arguments","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should call redisInstance.setKeyValue with correct arguments"},{"ancestorTitles":["CacheHelper"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"CacheHelper should call redisInstance.getValueByKey and return parsed value","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should call redisInstance.getValueByKey and return parsed value"},{"ancestorTitles":["CacheHelper"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"CacheHelper should return null when redisInstance.getValueByKey returns null","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return null when redisInstance.getValueByKey returns null"}],"endTime":1739970990836,"message":"","name":"/usr/src/app/tests/unitTests/infrastructure/utils/cacheHelper.test.ts","startTime":1739970990556,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["Image Integration Tests"],"duration":5048,"failureDetails":[],"failureMessages":[],"fullName":"Image Integration Tests should save image, get new image url,get image, check image expired after retention time","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should save image, get new image url,get image, check image expired after retention time"},{"ancestorTitles":["Image Integration Tests"],"duration":10,"failureDetails":[],"failureMessages":[],"fullName":"Image Integration Tests should return 404 for invalid image ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should return 404 for invalid image ID"}],"endTime":1739970996689,"message":"","name":"/usr/src/app/tests/integrationTests/image.test.ts","startTime":1739970990839,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["File Utils"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"File Utils should write a file successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"passed","title":"should write a file successfully"},{"ancestorTitles":["File Utils"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"File Utils should serve a file successfully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"status":"passed","title":"should serve a file successfully"},{"ancestorTitles":["File Utils"],"duration":7,"failureDetails":[],"failureMessages":[],"fullName":"File Utils should throw InvalidFile error if file is not found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should throw InvalidFile error if file is not found"},{"ancestorTitles":["File Utils"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"File Utils should generate a hash of a string","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should generate a hash of a string"}],"endTime":1739970996986,"message":"","name":"/usr/src/app/tests/unitTests/infrastructure/utils/fileUtils.test.ts","startTime":1739970996692,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["General utils","convertToSeconds"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"General utils convertToSeconds should handle various input cases correctly","invocations":1,"location":null,"numPassingAsserts":11,"retryReasons":[],"status":"passed","title":"should handle various input cases correctly"}],"endTime":1739970997248,"message":"","name":"/usr/src/app/tests/unitTests/infrastructure/utils/utils.test.ts","startTime":1739970996989,"status":"passed","summary":""}],"wasInterrupted":false}
